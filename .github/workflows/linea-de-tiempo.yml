name: linea-de-tiempo

on:
  workflow_dispatch:
    inputs:
      mes:
        description: 'Mes del acontecimiento'
        required: true
      dia:
        description: 'Día del acontecimiento'
        required: true

jobs:
  preparar-eventos:
    runs-on: ubuntu-latest
    outputs:
      eventos: ${{ steps.set_matrix.outputs.eventos }}
    steps:
      - name: Configurar variables
        run: |
          echo "MONTH=${{ github.event.inputs.mes }}" >> $GITHUB_ENV
          echo "DAY=${{ github.event.inputs.dia }}" >> $GITHUB_ENV
          echo "LANGUAGE=${{ vars.LANG }}" >> $GITHUB_ENV

      - name: Cache respuesta API
        id: cache_api
        uses: actions/cache@v3
        with:
          path: cache_apis
          key: linea-de-tiempo-${{ env.LANGUAGE }}-${{ env.DAY }}-${{ env.MONTH }}

      - name: Consumir API de Línea de Tiempo
        id: consumir_api
        run: |
          mkdir -p cache_apis
          if [ -f cache_apis/response.json ]; then
            echo "Usando cache existente"
            RESPONSE=$(cat cache_apis/response.json)
          else
            echo "Cache no encontrado, consultando API..."
            RESPONSE=$(curl --silent --location "https://api.wikimedia.org/feed/v1/wikipedia/$LANGUAGE/onthisday/all/$MONTH/$DAY")
            echo "$RESPONSE" > cache_apis/response.json
          fi

          # Crear lista de eventos para matrix
          echo "$RESPONSE" | jq -c '.selected[] | {url: .pages[0].content_urls.desktop.page, title: .pages[0].title}' > eventos.json
          EVENTOS_JSON=$(cat eventos.json | jq -s '.')
          echo "eventos=$EVENTOS_JSON" >> $GITHUB_OUTPUT

      - name: Guardar eventos para matrix
        id: set_matrix
        run: echo "eventos=$(cat eventos.json | jq -s '.')" >> $GITHUB_OUTPUT

  generar-pdfs:
    needs: preparar-eventos
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        evento: ${{fromJSON(needs.preparar-eventos.outputs.eventos)}}
    steps:
      - name: Convertir URL a PDF
        uses: ntdesmond/html2pdf-action@v1
        with:
          url: ${{ matrix.evento.url }}
          output: "./${{ env.MONTH }}-${{ env.DAY }}-${{ matrix.evento.title | replace(' ','_') }}.pdf"
          options: |
            {"format": "A4", "margin": {"top": "10mm", "left": "10mm", "right": "10mm", "bottom": "10mm"}}

      - name: Subir PDF como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MONTH }}-${{ env.DAY }}-${{ matrix.evento.title | replace(' ','_') }}
          path: "./${{ env.MONTH }}-${{ env.DAY }}-${{ matrix.evento.title | replace(' ','_') }}.pdf"
          retention-days: 1

